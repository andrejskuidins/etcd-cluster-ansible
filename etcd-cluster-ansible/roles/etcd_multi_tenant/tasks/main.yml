---
- name: Check if root role exists
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 role list"
  register: root_role_list_output

- name: Create root role if it does not exist
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 role add root"
  when: "'root' not in root_role_list_output.stdout_lines"
  register: root_role_creation
  changed_when: "'role name already exists' not in root_role_creation.stderr"
  ignore_errors: true

- name: Check if root user exists
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user list"
  register: root_user_list_output

- name: Create root user if it does not exist
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user add root:{{ root_password }}"
  when: "'root' not in root_user_list_output.stdout_lines"
  register: root_user_creation
  changed_when: "'user name already exists' not in root_user_creation.stderr"
  ignore_errors: true

- name: Ensure etcd root granted
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user grant-role root root"

- name: Ensure auth enable
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 auth enable"
  register: auth_enabled
  changed_when: "'Authentication Already Enabled' not in auth_enabled.stderr"
  ignore_errors: true

- name: Check if tenant role exists
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 role list"
  register: tenant_role_list_output
  when: auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr)

- name: Create tenant role if it does not exist
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 role add {{ tenant_role }}"
  when: tenant_role not in tenant_role_list_output.stdout_lines and (auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr))

- name: Grant permissions to tenant role
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 role grant-permission {{ tenant_role }} readwrite {{ tenant_prefix }}"
  when: auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr)

- name: Check if tenant user exists
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user list"
  register: tenant_user_list_output
  when: auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr)

- name: Create tenant user
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user add {{ tenant_user }}:{{ tenant_password }}"
  when: tenant_user not in tenant_user_list_output.stdout_lines and (auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr))

- name: Grant tenant role to tenant user
  command: "{{ etcdctl_bin }} --user=root:{{ root_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 user grant-role {{ tenant_user }} {{ tenant_role }}"
  when: auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr)

- name: Verify tenant user access
  command: "{{ etcdctl_bin }} --user={{ tenant_user }}:{{ tenant_password }} --cacert=/etc/etcd/ssl/ca.pem --cert={{ etcd_server_cert }} --key={{ etcd_server_key }} --endpoints=https://{{ ansible_hostname }}:2379 get {{ tenant_prefix }}"
  register: verify_access
  changed_when: false
  when: auth_enabled is succeeded or ('Authentication Already Enabled' in auth_enabled.stderr)

- name: Display verification result
  debug:
    msg: "Tenant user access verified: {{ verify_access.stdout }}"
  when: verify_access is defined